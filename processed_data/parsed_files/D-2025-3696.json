{
    "document_id": "D-2025-3696",
    "LinkTitle": "D-2025-3696",
    "file_name": "D-2025-3696.pdf",
    "file_path": "/Users/JADEPOTTER5/Downloads/DMP-MT/processed_data/pdfs_new/org_pdfs/D-2025-3696.pdf",
    "metadata": {
        "title": "Certified First-Order Model Expansion (CertiFOX)",
        "author": "N/A",
        "num_pages": 6
    },
    "content": {
        "full_text": "Plan Overview\nPlan Overview\nA Data Management Plan created using DMPonline.be\nTitle: \nTitle: \nCertified First-Order Model Expansion (CertiFOX)\nCreator:\nCreator:\nBart Bogaerts\nPrincipal Investigator: \nPrincipal Investigator: \nBart Bogaerts\nAffiliation: \nAffiliation: \nKU Leuven (KUL)\nFunder: \nFunder: \nEuropean Research Council (ERC)\nTemplate: \nTemplate: \nERC DMP +\nPrincipal Investigator:\nPrincipal Investigator:\n \nBart Bogaerts\nProject abstract:\nProject abstract:\nThe field of combinatorial optimization is concerned with developing generic tools that take a declarative problem description and\nautomatically compute an optimal solution to it. Often, users specify their problem in a high-level, human-understandable formal\nlanguage. This specification is first translated into a low-level specification a solver understands and subsequently solved. Thanks to\ntremendous progress in solving technology, we can now solve a wide variety of NP-hard (or worse) problems in practice. Moreover, these\ntools are increasingly used in real-life applications, including high-value and life-affecting decisions. Therefore, it is of utmost importance\nthat they be completely reliable. The central objective of this proposal is to develop methodologies and tools with which we can\nguarantee with 100% certainty that the right problem has been solved correctly.\nTo achieve this ambitious objective, we will build on recent breakthroughs in proof logging, where solvers do not just output an answer,\nbut also a proof (or certificate) of correctness. However, a major limitation of current techniques is that correctness is not proven relative\nto the human-understandable specification written by the user, but relative to the low-level translation that the solver receives, meaning\nthat there is no guarantee that the solver is solving the original problem. In this project, we will investigate end-to end guarantees of\ncorrectness. When successful, this will have a major impact on the way combinatorial optimization software is developed, evaluated, and\nused: the proofs produced will enable (1) debugging, since proofs contain detailed information about where bugs occurred, (2)\nauditability, since proofs can be stored and checked by an independent third party, and even (3) rigorous evaluation of algorithmic\nimprovements. There are several fundamental questions that need to be tackled before we get there, relating to the nature of proofs for\ngrounding, proofs of transformations, and the combination of proofs.\nID: \nID: \n211104\nStart date: \nStart date: \n01-10-2024\nEnd date: \nEnd date: \n30-09-2029\nLast modified: \nLast modified: \n20-11-2024\nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n1 of 6\nCertified First-Order Model Expansion (CertiFOX)\nCertified First-Order Model Expansion (CertiFOX)\nGDPR Record\nGDPR Record\nGDPR record\nGDPR record\nHave you registered personal data processing activities for this project?\nHave you registered personal data processing activities for this project?\nNo\nWe do not process any personal data\nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n2 of 6\nCertified First-Order Model Expansion (CertiFOX)\nCertified First-Order Model Expansion (CertiFOX)\nDPIA\nDPIA\nDPIA\nDPIA\nHave you performed a DPIA for the personal data processing activities for this project?\nNot applicable\nWe do not process any personal data\nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n3 of 6\nCertified First-Order Model Expansion (CertiFOX)\nCertified First-Order Model Expansion (CertiFOX)\nERC DMP +\nERC DMP +\nProject information\nProject information\nProject Acronym\nProject Acronym\nCertiFOX \nProject Number\nProject Number\n101122653 \nData summary\nData summary\nSummary\nSummary\nWe are researching fundamental algorithms for combinatorial optimization. Most research will be done on publicly available\ndatasets without risk of abuse. No personal data will be collected for CertiFOX. \n \nOverview of all the generated data: \n \nType\nDescription\nNew?\nFormats\nSize\nSoftware\nsource code of proof checker\nand of proof-generating\ngrounders and solvers.\nYes\nSource files (.cpp,\nhpp, py) and\ndocumentation of\ncode (.md, .txt)\n<1 Gb\nInstances\nBenchmarking instances, for\ntesting proof generating\nmethods on\nNo: Re-used from (future or past) solving competitions,\neg \nhttps://www.minizinc.org/challenge.html\n and\nhttps://satcompetition.github.io/\n and \nhttps://maxsat-\nevaluations.github.io/2024/\nYes: if needed more (synthetic) data will be generated. \n.cnf, .wcnf, .asp, .lp,\n.mzn, .fzn, .idp\n<100Gb\nProofs\ngenerated by our tools during\nexperimental evaluation\nYes\n.pbp, .foxp\n<1Tb\nScripts\nScripts for running, analyzing,\nand reproducing experiments\nYes\n.sh, .py .r\n< 1 Gb\nResults\nExperimental results (detailed\nstatistics about runs, including\ntime, memory usage, types of\nproof rules used)\nYes\n.txt .csv\n<10Gb\nPapers\nSource files for papers and\nimages (eg graphs\nsummarizing runtimes)\ngenerated from the\nexperiments\nYes\n.tex .jpg, .png\n<1Gb\n \n \n \n \n \n \n \nThis data will be managed on a per paper basis. \nThe general principle is that: \nBefore acceptance of a paper, all data will be closed, but accessible by project members and safely backed up\nAfter acceptance of a paper, all relevant data will be open. \n \n \nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n4 of 6\nFAIR data\nFAIR data\n1. Making data findable\n1. Making data findable\nUpon acceptance of a paper: \nFor all the \nsoftware \nsoftware \ndeveloped for that paper:\nThe code will be made available on a public git server (e.g., gitlab)\nA snapshot  will be published on the KU Leuven RDR repository (trusted data repository with DOI) or Zenodo (including a\ncommit hash linking it to the aforementioned git repository)\nAll \ninstances\ninstances\n used will be published on the KU Leuven RDR repository\nAll \nscripts\nscripts\n needed to reproduce the experiments will be published on the KU Leuven RDR or Zenodo repository\nThe author accepted manuscript (\npdf \npdf \nfile)\nfile)\n of the paper will be deposited in Lirias (KU Leuven's trusted paper repository)\nWe will use the metadata of these repositories to ensure all data is findable and linked. \n2. Making data openly accessible\n2. Making data openly accessible\nUpon acceptance of a paper:, Software, scripts, instances, and pdf files (paper) will be made openly accessible through KU\nLeuven's trusted repositories. \nThe actual proofs and detailed run results will not be made open since they can be reproduced (and since proofs can get very\nlarge). \n \nNext to storing this snapshot in a data repository (Zenodo or KU Leuven's RDR) and a versioned history on a git repository, we\nensure maximal openness and follow best practices in our research domain.\n3. Making data interoperable\n3. Making data interoperable\nWe use standard formats for all data (for instances instances for SAT solvers will be stored as dimacs .cnf files, as common in\nthe field). The only exception is the proofs, which will be in a new format, with provisionary name \"First Order model eXpansion\nproof .foxp\". \n4. Increase data re-use\n4. Increase data re-use\nThe instances will be released under a CC-BY license.\nThe source code will be released under a Apache-2.0 or MIT License.\nThese will be made available at the latest on the publication time of the corresponding paper. \n \nThe data will remain reusable at least for the duration of the hosting service that is hosting it (zenodo, github, KU Leuven RDR) as\nwell as on our longterm snapshot storage (guaranteed at least 10 years).\n \n5. Allocation of resources and data security\n5. Allocation of resources and data security\nOverview of where data will be stored. \n \n \nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n5 of 6\nType\nBefore publication\nAfter publication\nSoftware\nKU Leuven gitlab server \nor \nPrivate github\nPublic github\nand\nand\n(KU Leuven RDR or Zenodo)\nInstances\nKU Leuven gitlab server \nor \nPrivate github\nKU Leuven RDR or Zenodo \nProofs\nDepartmental storage\nDepartmental storage (not public: reproducible)\nScripts\nKU Leuven gitlab server \nor \nPrivate github\nKU Leuven RDR or Zenodo \nResults\nKU Leuven gitlab server \nor \nPrivate github\nKU Leuven gitlab server (not public: reproducible)\nPapers\nKU Leuven gitlab server \nor \nPrivate github\nPDF files: in Lirias\nSource files: KU Leuven gitlab server\n \n \n \nThe KU Leuven data policy requires retention of relevant data for a period of at least 10 years\nafter the end of a project (barring 3rd party agreements).\nKU Leuven supports its researchers in the area of RDM (research data management) by the\nprovision of a customized data management plan (DMP) (including guidance to KU Leuven legal\nrequirements and policy guidelines) based on the templates provided by the Digital Curation\nCentre (UK), and a dedicated RDM support desk advising on data storage, metadata and\npreparing data for sharing. The university also continues to invest in affordable long-term\nstorage and curation.\nThis project contributes to the facilities owned and operated by the research section and\ndepartment. This includes long-term, secure data storage (NetApp), Git repository servers, web\nservers and backup facilities. This amounts to approximately 2500 EUR / year.\nThe PI will be responsible for implementing the DMP, and the host institute (KU Leuven) offers\nsupport for data management. The PI will update the DMP anytime conditions change. A midterm\nreview will be accompanied by a detailed DMP and a final reviewed DMP will be sent along\nwith the final report.\n \n \nCreated using DMPonline.be. Last modiﬁed 20 November 2024\n6 of 6"
    },
    "clean_full_text": "Plan Overview Plan Overview A Data Management Plan created using DMPonline.be Title: Title: Certified First-Order Model Expansion (CertiFOX) Creator: Creator: Bart Bogaerts Principal Investigator: Principal Investigator: Bart Bogaerts Affiliation: Affiliation: KU Leuven (KUL) Funder: Funder: European Research Council (ERC) Template: Template: ERC DMP + Principal Investigator: Principal Investigator: Bart Bogaerts Project abstract: Project abstract: The field of combinatorial optimization is concerned with developing generic tools that take a declarative problem description and automatically compute an optimal solution to it. Often, users specify their problem in a high-level, human-understandable formal language. This specification is first translated into a low-level specification a solver understands and subsequently solved. Thanks to tremendous progress in solving technology, we can now solve a wide variety of NP-hard (or worse) problems in practice. Moreover, these tools are increasingly used in real-life applications, including high-value and life-affecting decisions. Therefore, it is of utmost importance that they be completely reliable. The central objective of this proposal is to develop methodologies and tools with which we can guarantee with 100% certainty that the right problem has been solved correctly. To achieve this ambitious objective, we will build on recent breakthroughs in proof logging, where solvers do not just output an answer, but also a proof (or certificate) of correctness. However, a major limitation of current techniques is that correctness is not proven relative to the human-understandable specification written by the user, but relative to the low-level translation that the solver receives, meaning that there is no guarantee that the solver is solving the original problem. In this project, we will investigate end-to end guarantees of correctness. When successful, this will have a major impact on the way combinatorial optimization software is developed, evaluated, and used: the proofs produced will enable (1) debugging, since proofs contain detailed information about where bugs occurred, (2) auditability, since proofs can be stored and checked by an independent third party, and even (3) rigorous evaluation of algorithmic improvements. There are several fundamental questions that need to be tackled before we get there, relating to the nature of proofs for grounding, proofs of transformations, and the combination of proofs. ID: ID: 211104 Start date: Start date: 01-10-2024 End date: End date: 30-09-2029 Last modified: Last modified: 20-11-2024 Created using DMPonline.be. Last modiﬁed 20 November 2024 1 of 6 Certified First-Order Model Expansion (CertiFOX) Certified First-Order Model Expansion (CertiFOX) GDPR Record GDPR Record GDPR record GDPR record Have you registered personal data processing activities for this project? Have you registered personal data processing activities for this project? No We do not process any personal data Created using DMPonline.be. Last modiﬁed 20 November 2024 2 of 6 Certified First-Order Model Expansion (CertiFOX) Certified First-Order Model Expansion (CertiFOX) DPIA DPIA DPIA DPIA Have you performed a DPIA for the personal data processing activities for this project? Not applicable We do not process any personal data Created using DMPonline.be. Last modiﬁed 20 November 2024 3 of 6 Certified First-Order Model Expansion (CertiFOX) Certified First-Order Model Expansion (CertiFOX) ERC DMP + ERC DMP + Project information Project information Project Acronym Project Acronym CertiFOX Project Number Project Number 101122653 Data summary Data summary Summary Summary We are researching fundamental algorithms for combinatorial optimization. Most research will be done on publicly available datasets without risk of abuse. No personal data will be collected for CertiFOX. Overview of all the generated data: Type Description New? Formats Size Software source code of proof checker and of proof-generating grounders and solvers. Yes Source files (.cpp, hpp, py) and documentation of code (.md, .txt) <1 Gb Instances Benchmarking instances, for testing proof generating methods on No: Re-used from (future or past) solving competitions, eg https://www.minizinc.org/challenge.html and https://satcompetition.github.io/ and https://maxsat- evaluations.github.io/2024/ Yes: if needed more (synthetic) data will be generated. .cnf, .wcnf, .asp, .lp, .mzn, .fzn, .idp <100Gb Proofs generated by our tools during experimental evaluation Yes .pbp, .foxp <1Tb Scripts Scripts for running, analyzing, and reproducing experiments Yes .sh, .py .r < 1 Gb Results Experimental results (detailed statistics about runs, including time, memory usage, types of proof rules used) Yes .txt .csv <10Gb Papers Source files for papers and images (eg graphs summarizing runtimes) generated from the experiments Yes .tex .jpg, .png <1Gb This data will be managed on a per paper basis. The general principle is that: Before acceptance of a paper, all data will be closed, but accessible by project members and safely backed up After acceptance of a paper, all relevant data will be open. Created using DMPonline.be. Last modiﬁed 20 November 2024 4 of 6 FAIR data FAIR data 1. Making data findable 1. Making data findable Upon acceptance of a paper: For all the software software developed for that paper: The code will be made available on a public git server (e.g., gitlab) A snapshot will be published on the KU Leuven RDR repository (trusted data repository with DOI) or Zenodo (including a commit hash linking it to the aforementioned git repository) All instances instances used will be published on the KU Leuven RDR repository All scripts scripts needed to reproduce the experiments will be published on the KU Leuven RDR or Zenodo repository The author accepted manuscript ( pdf pdf file) file) of the paper will be deposited in Lirias (KU Leuven's trusted paper repository) We will use the metadata of these repositories to ensure all data is findable and linked. 2. Making data openly accessible 2. Making data openly accessible Upon acceptance of a paper:, Software, scripts, instances, and pdf files (paper) will be made openly accessible through KU Leuven's trusted repositories. The actual proofs and detailed run results will not be made open since they can be reproduced (and since proofs can get very large). Next to storing this snapshot in a data repository (Zenodo or KU Leuven's RDR) and a versioned history on a git repository, we ensure maximal openness and follow best practices in our research domain. 3. Making data interoperable 3. Making data interoperable We use standard formats for all data (for instances instances for SAT solvers will be stored as dimacs .cnf files, as common in the field). The only exception is the proofs, which will be in a new format, with provisionary name \"First Order model eXpansion proof .foxp\". 4. Increase data re-use 4. Increase data re-use The instances will be released under a CC-BY license. The source code will be released under a Apache-2.0 or MIT License. These will be made available at the latest on the publication time of the corresponding paper. The data will remain reusable at least for the duration of the hosting service that is hosting it (zenodo, github, KU Leuven RDR) as well as on our longterm snapshot storage (guaranteed at least 10 years). 5. Allocation of resources and data security 5. Allocation of resources and data security Overview of where data will be stored. Created using DMPonline.be. Last modiﬁed 20 November 2024 5 of 6 Type Before publication After publication Software KU Leuven gitlab server or Private github Public github and and (KU Leuven RDR or Zenodo) Instances KU Leuven gitlab server or Private github KU Leuven RDR or Zenodo Proofs Departmental storage Departmental storage (not public: reproducible) Scripts KU Leuven gitlab server or Private github KU Leuven RDR or Zenodo Results KU Leuven gitlab server or Private github KU Leuven gitlab server (not public: reproducible) Papers KU Leuven gitlab server or Private github PDF files: in Lirias Source files: KU Leuven gitlab server The KU Leuven data policy requires retention of relevant data for a period of at least 10 years after the end of a project (barring 3rd party agreements). KU Leuven supports its researchers in the area of RDM (research data management) by the provision of a customized data management plan (DMP) (including guidance to KU Leuven legal requirements and policy guidelines) based on the templates provided by the Digital Curation Centre (UK), and a dedicated RDM support desk advising on data storage, metadata and preparing data for sharing. The university also continues to invest in affordable long-term storage and curation. This project contributes to the facilities owned and operated by the research section and department. This includes long-term, secure data storage (NetApp), Git repository servers, web servers and backup facilities. This amounts to approximately 2500 EUR / year. The PI will be responsible for implementing the DMP, and the host institute (KU Leuven) offers support for data management. The PI will update the DMP anytime conditions change. A midterm review will be accompanied by a detailed DMP and a final reviewed DMP will be sent along with the final report. Created using DMPonline.be. Last modiﬁed 20 November 2024 6 of 6"
}